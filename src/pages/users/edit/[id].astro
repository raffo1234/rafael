---
import UserEditForm from "../../../components/UserEditForm";
import Dashboard from "../../../layouts/Dashboard.astro";
import { supabase } from "../../../lib/supabase";

export async function getStaticPaths() {
  const { data: users, error } = await supabase.from("user").select("id");

  if (error) {
    console.error("Error fetching items:", error.message);
    return [];
  }

  return users.map((user) => ({
    params: { id: user.id.toString() },
  }));
}

const { data: user, error } = await supabase
  .from("user")
  .select("*")
  .eq("id", Astro.params.id)
  .single();

if (error || !user) {
  console.error("Error fetching item:", error?.message);
  return { notFound: true };
}

const { id } = Astro.params;

if (!id || !user) {
  return Astro.redirect("/404");
}

// async function updateData(data: User, userId: string) {
//   const { data: updatedUser, error } = await supabase
//     .from("user")
//     .update(data)
//     .eq("id", userId)
//     .select()
//     .single();

//   if (error) {
//     console.error("Error updating data:", error);
//     return { data, success: false, error: error.message };
//   }
//   return { data: updatedUser, success: true };
// }

// if (Astro.request.method === "POST") {
//   const formData = await Astro.request.formData();
//   const newUser: User = {
//     username: formData.get("username") as string,
//     email: formData.get("email") as string,
//   };

//   const response = await updateData(newUser, id);

//   if (response.success) {
//     return Astro.redirect("/users");
//   }
// }
---

<Dashboard pageTitle="Add User">
  <div class="flex w-full">
    <section class="w-[280px] bg-neutral-200 p-5">
      <header class="mb-20">
        <div class="flex gap-2">
          <img
            src=""
            alt="Jhon Doe"
            class="w-11 h-11 rounded-full bg-neutral-700"
          />
          <div>
            <p class="text-sm leading-3">Welcome back</p>
            <h3 class="font-bold text-lg">Jhon Doe</h3>
          </div>
        </div>
      </header>
      <nav>
        <ul class="flex flex-col gap-2 text-sm">
          <li>
            <a
              href="/users"
              title="Users"
              class="hover:bg-white rounded-md block px-3 py-2">Users</a
            >
          </li>
          <li>
            <a
              href="/projects"
              title="Projects"
              class="hover:bg-white rounded-md block px-3 py-2">Projects</a
            >
          </li>
        </ul>
      </nav>
    </section>
    <main class="flex-grow bg-white min-h-lvh">
      <header class="border-neutral-200 border-b p-5">
        <h1 class="text-4xl font-semibold">Edit User</h1>
      </header>
      <section class="w-full mx-auto p-5">
        <UserEditForm user={user} client:load />
      </section>
    </main>
  </div>
</Dashboard>
